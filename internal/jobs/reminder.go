package jobs

import (
	"fmt"
	"log"
	"namaz-time-bot/internal/db"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

var botAPI *tgbotapi.BotAPI

// InitJobs –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Å –±–æ—Ç–æ–º
func InitJobs(bot *tgbotapi.BotAPI) {
	botAPI = bot
}

// StartReminderJob –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
func StartReminderJob() {
	ticker := time.NewTicker(1 * time.Minute)
	location := time.FixedZone("UTC+5", 5*60*60)

	go func() {
		for range ticker.C {
			currentTime := time.Now().In(location).Format("15:04")
			log.Printf("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω–∞ –≤—Ä–µ–º—è: %s", currentTime)

			// –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞–º–∞–∑–∞–º–∏
			users, err := db.GetUsersWithPrayerTimes()
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err)
				continue
			}

			log.Printf("–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –Ω–∞–º–∞–∑–∞–º–∏: %d", len(users))

			for _, user := range users {
				times, err := db.GetPrayerTimes(user.ChatID)
				if err != nil {
					log.Printf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %v", user.ChatID, err)
					continue
				}

				for prayer, prayerTime := range times {
					if prayerTime == currentTime {
						log.Printf("–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %d –æ –Ω–∞–º–∞–∑–µ %s –≤ %s", user.ChatID, prayer, prayerTime)

						// –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏
						msg := tgbotapi.NewMessage(user.ChatID, fmt.Sprintf("üîî –í—Ä–µ–º—è %s! üôè\n\n‚è∞ %s\n\n‚úÖ –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞–º–∞–∑–∞", prayer, prayerTime))

						// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ—Ç–º–µ—Ç–∫–∏
						var buttonData string
						switch prayer {
						case "–§–∞–¥–∂—Ä":
							buttonData = "mark_fajr"
						case "–ó—É—Ö—Ä":
							buttonData = "mark_dhuhr"
						case "–ê—Å—Ä":
							buttonData = "mark_asr"
						case "–ú–∞–≥—Ä–∏–±":
							buttonData = "mark_maghrib"
						case "–ò—à–∞":
							buttonData = "mark_isha"
						}

						if buttonData != "" {
							button := tgbotapi.NewInlineKeyboardMarkup(
								tgbotapi.NewInlineKeyboardRow(
									tgbotapi.NewInlineKeyboardButtonData("‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ", buttonData),
								),
							)
							msg.ReplyMarkup = button
						}

						_, err := botAPI.Send(msg)
						if err != nil {
							log.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %d: %v", user.ChatID, err)
						}
					}
				}
			}
		}
	}()
}
