package handlers

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"namaz-time-bot/internal/api"
	"namaz-time-bot/internal/db"
)

func HandleCommand(msg *tgbotapi.Message) {
	switch msg.Text {
	case "/start":
		sendMessage(msg.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –Ω–∞–º–∞–∑–µ.")
	case "/mark":
		sendPrayerButtons(msg.Chat.ID)
	case "/prayer_times":
		city, err := db.GetUserCity(msg.Chat.ID)
		if err != nil {
			sendMessage(msg.Chat.ID, "üåç –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_city.")
			return
		}

		times, err := api.GetPrayerTimes(city, "Russia")
		if err != nil {
			sendMessage(msg.Chat.ID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–∞.")
			return
		}

		response := fmt.Sprintf(
			"–í—Ä–µ–º—è –Ω–∞–º–∞–∑–æ–≤ –≤ %s:\nüåÖ –§–∞–¥–∂—Ä: %s\nüèôÔ∏è –ó—É—Ö—Ä: %s\nüåá –ê—Å—Ä: %s\nüåÜ –ú–∞–≥—Ä–∏–±: %s\nüåÉ –ò—à–∞: %s",
			city, times.Fajr, times.Dhuhr, times.Asr, times.Maghrib, times.Isha,
		)
		sendMessage(msg.Chat.ID, response)
	case "/set_reminders":
		setReminders(msg.Chat.ID)
	default:
		sendMessage(msg.Chat.ID, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.")
	}
}

func setReminders(chatID int64) {
	city, err := db.GetUserCity(chatID)
	if err != nil {
		sendMessage(chatID, "üåç –í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≥–æ—Ä–æ–¥! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_city.")
		return
	}

	times, err := api.GetPrayerTimes(city, "Russia")
	if err != nil {
		sendMessage(chatID, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–∞.")
		return
	}

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –ë–î
	err = db.SaveReminder(chatID, "–§–∞–¥–∂—Ä", times.Fajr)
	if err != nil {
		return
	}
	err = db.SaveReminder(chatID, "–ó—É—Ö—Ä", times.Dhuhr)
	if err != nil {
		return
	}
	err = db.SaveReminder(chatID, "–ê—Å—Ä", times.Asr)
	if err != nil {
		return
	}
	err = db.SaveReminder(chatID, "–ú–∞–≥—Ä–∏–±", times.Maghrib)
	if err != nil {
		return
	}
	err = db.SaveReminder(chatID, "–ò—à–∞", times.Isha)
	if err != nil {
		return
	}

	sendMessage(chatID, "üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –Ω–∞–º–∞–∑–∞—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
}

func sendPrayerButtons(chatID int64) {
	buttons := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –§–∞–¥–∂—Ä", "mark_fajr"),
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –ó—É—Ö—Ä", "mark_dhuhr"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –ê—Å—Ä", "mark_asr"),
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –ú–∞–≥—Ä–∏–±", "mark_maghrib"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –ò—à–∞", "mark_isha"),
		),
	)
	msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–º–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏:")
	msg.ReplyMarkup = buttons
	_, err := botAPI.Send(msg)
	if err != nil {
		return
	}
}

func sendCityButtons(chatID int64) {
	buttons := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üèôÔ∏è –ú–æ—Å–∫–≤–∞", "city_Moscow"),
			tgbotapi.NewInlineKeyboardButtonData("üèôÔ∏è –ö–∞–∑–∞–Ω—å", "city_Kazan"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üèôÔ∏è –ú–µ–∫–∫–∞", "city_Mecca"),
			tgbotapi.NewInlineKeyboardButtonData("üèôÔ∏è –ú–µ–¥–∏–Ω–∞", "city_Medina"),
		),
	)
	msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:")
	msg.ReplyMarkup = buttons
	botAPI.Send(msg)
}

//func sendMessage(chatID int64, text string) {
//	msg := tgbotapi.NewMessage(chatID, text)
//	bot.Bot.Send(msg)
//}
